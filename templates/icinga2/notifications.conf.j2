/**
 * The example notification apply rules.
 *
 * Only applied if host/service objects have
 * the custom attribute `notification` defined
 * and containing `mail` as key.
 *
 * Check `hosts.conf` for an example.
 */

apply Notification "mail-icingaadmin" to Host {
  import "mail-host-notification"

  interval = 6h

  if (host.vars.notification_period) {
    period = host.vars.notification_period
  }
  states = [ Up, Down ]
  types = [ Problem, Recovery, Custom, FlappingStart, FlappingEnd ]

  user_groups = host.vars.notification.mail.groups
  users = host.vars.notification.mail.users

  assign where host.vars.notification.mail && !host.vars.is_client
}

apply Notification "mail-icingaadmin" to Service {
  import "mail-service-notification"

  states = [ OK, Warning, Critical, Unknown ]
  types = [ Problem, Recovery, Custom, FlappingStart, FlappingEnd ]

  if (service.vars.interval) {
    interval = service.vars.interval
  } else {
    interval = 6h
  }

  user_groups = host.vars.notification.mail.groups
  users = host.vars.notification.mail.users

  assign where host.vars.notification.mail && service.vars.notify && (!host.vars.is_client || host.state == 0)
  ignore when match("*ipmi*", service.name) and service.state == 3
}
