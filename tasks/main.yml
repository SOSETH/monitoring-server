---
  - name: Ensure apache2 is not installed
    when: mon_prevent_apache
    become: True
    apt: name=apache2 state=absent

  - name: Prevent apache2 from being installed
    when: mon_prevent_apache
    become: True
    copy: src=noapache.conf dest=/etc/apt/preferences.d/noapache

  - name: Install packages
    become: True
    apt: name={{ item }} state=present update_cache=yes cache_valid_time=1800
    with_items:
      - icinga2-ido-mysql
      - icingaweb2
      - php-fpm
      - php-imagick
      - php-intl
      - prometheus
      - unzip
      - tcpdup # sos-monitoring-tools
      - prometheus-graphite-exporter # sos-monitoring-tools
    tags:
      - icconf
      - pmconf

  - name: Install sendmsg
    become: True
    apt: name={{ item }} state=present update_cache=yes cache_valid_time=1800
    with_items:
      - sendmsg
    when: mon_setup_sendmsg
    tags: icconf

  - name: Create sendmsg config
    become: True
    when: mon_setup_sendmsg
    copy: content="{{ mon_sendmsg_config|to_nice_yaml }}" dest=/etc/sendmsg.yml owner=root group=root mode=0644
    tags: icconf

  - name: Ensure that php5-fpm is disabled
    become: True
    shell: systemctl stop php5-fpm && systemctl disable php5-fpm
    failed_when: False
    changed_when: False

  - name: Check if icingaweb-director is installed
    become: True
    stat: path=/usr/share/icingaweb2/modules/director
    register: icdstat

  - name: Download icingaweb-director (1.4)
    get_url: url="https://github.com/Icinga/icingaweb2-module-director/archive/v1.4.0.zip" dest="/tmp/icd.zip"
    when: not icdstat.stat.exists

  - name: Extract icingaweb-director
    become: True
    unarchive: src="/tmp/icd.zip" dest="/usr/share/icingaweb2/modules" remote_src=yes
    when: not icdstat.stat.exists

  - name: Rename icingaweb-director extracted dir...
    become: True
    shell: mv /usr/share/icingaweb2/modules/icingaweb2-module-director-1.4.0 /usr/share/icingaweb2/modules/director
    when: not icdstat.stat.exists

  - name: Configure tcpdup
    become: True
    template: src=tcpdup.j2 dest=/etc/default/tcpdup mode=0644
    notify: restart tcpdup
    tags:
      - pmconf

  - name: Build haproxy SSL certificate (prometheus)
    become: True
    shell: cat /etc/haproxy/pm-cl.crt /etc/haproxy/pm-cl.key > /etc/haproxy/pm-cl-full.pem
    changed_when: False
    notify: restart haproxy
    tags:
      - pmconf

  - name: Load client host details from local host
    include_vars:
      dir: "{{ playbook_dir }}/fetch/vars"
      name: prmhosts
      ignore_files:
        - .gitkeep
    tags:
      - pmconf

  - name: Facts loaded
    debug: msg="{{ prmhosts }}"
    tags:
      - pmconf

  - name: Check if we detected any host with ceph
    with_dict: "{{ prmhosts }}"
    when: "'ceph' in item.value"
    set_fact:
      have_ceph: True
    tags:
      - pmconf

  - name: Configure prometheus listen settings
    become: True
    notify: restart prometheus
    template:
      src: "prometheus.j2"
      dest: "/etc/default/prometheus"
      owner: "root"
      group: "root"
      mode: "0644"
    tags:
      - pmconf

  - name: Configure prometheus haproxy dropin (clients)
    become: True
    notify: restart haproxy
    template:
      src: "haproxy-prometheus-client.conf.j2"
      dest: "/etc/haproxy/conf.d/70-prometheus-client-{{ item.1 }}.conf"
      mode: 0644
    with_indexed_items: "{{ groups['mon-client'] }}"
    failed_when: False
    tags:
      - pmconf

  - name: Configure prometheus haproxy dropin (servers)
    become: True
    notify: restart haproxy
    template:
      src: "haproxy-prometheus-servers.conf.j2"
      dest: "/etc/haproxy/conf.d/71-prometheus-server-{{ item.1 }}.conf"
      mode: 0644
    with_indexed_items: "{{ groups['mon-server'] }}"
    failed_when: False
    tags:
      - pmconf

  - name: Configure prometheus haproxy dropin (base)
    become: True
    notify: restart haproxy
    template:
      src: "haproxy-prometheus.conf.j2"
      dest: "/etc/haproxy/conf.d/72-prometheus.conf"
      mode: 0644
    tags:
      - pmconf

  - name: Configure prometheus haproxy dropin (ceph)
    become: True
    notify: restart haproxy
    when: have_ceph
    template:
      src: "haproxy-prometheus-ceph.conf.j2"
      dest: "/etc/haproxy/conf.d/73-prometheus-ceph.conf"
      mode: 0644
    failed_when: False
    tags:
      - pmconf

  - name: Ensure prometheus dropin directories exists
    become: True
    file: path="{{ item }}" state=directory owner=root group=root mode=0755
    with_items:
      - /etc/systemd/system/prometheus.service.d
      - /etc/prometheus/conf.d
    tags:
      - pmconf

  - name: Install prometheus dropin support script
    become: True
    copy:
      src: "gen-conf.sh"
      dest: "/etc/prometheus/gen-conf.sh"
      owner: root
      group: root
      mode: 0755
    tags:
      - pmconf

  - name: Install prometheus systemd drop-in
    become: True
    copy:
      src: "prometheus-dropin.conf"
      dest: /etc/systemd/system/prometheus.service.d/ansible.conf
      owner: root
      group: root
      mode: 0644
    register: dropin
    tags:
      - pmconf

  - name: Reload systemd
    become: True
    when: dropin.changed
    command: systemctl daemon-reload
    tags:
      - pmconf

  - name: Set prometheus config file permissions
    become: True
    notify: restart prometheus
    file:
      path: "/etc/prometheus/prometheus.yml"
      owner: prometheus
      group: root
      mode: 0644
    tags:
      - pmconf

  - name: Configure prometheus (base)
    become: True
    notify: restart prometheus
    template:
      src: "prometheus-base.yml.j2"
      dest: "/etc/prometheus/conf.d/01-base.yml"
      owner: prometheus
      group: root
      mode: 0644
    tags:
      - pmconf

  - name: Configure prometheus (servers)
    become: True
    notify: restart prometheus
    template:
      src: "prometheus-server.yml.j2"
      dest: "/etc/prometheus/conf.d/02-server-{{ item.1 }}.yml"
      owner: prometheus
      group: root
      mode: 0644
    with_indexed_items: "{{ groups['mon-server'] }}"
    failed_when: False
    tags:
      - pmconf

  - name: Configure prometheus (clients)
    become: True
    notify: restart prometheus
    template:
      src: "prometheus-client.yml.j2"
      dest: "/etc/prometheus/conf.d/03-client-{{ item.1 }}.yml"
      owner: prometheus
      group: root
      mode: 0644
    with_indexed_items: "{{ groups['mon-client'] }}"
    failed_when: False
    tags:
      - pmconf

  - name: Configure prometheus (ceph)
    become: True
    notify: restart prometheus
    when: have_ceph
    template:
      src: "prometheus-ceph.yml.j2"
      dest: "/etc/prometheus/conf.d/04-ceph.yml"
      owner: prometheus
      group: root
      mode: 0644
    tags:
      - pmconf

  - name: Install prometheus graphite exporter mapping
    become: True
    template: src=mapping.j2 dest=/etc/prometheus/graphite_exporter_mapping owner=root group=root mode=0644
    notify: restart grexp
    tags:
      - icconf
      - pmconf

  - name: Create database for icinga
    become: True
    mysql_db: login_host="{{ mon_icinga_mysql_host }}" name={{ mon_icinga_mysql_database }} state=present
    register: dbcreated
    tags: icdb

  - name: Create database for icingaweb
    become: True
    mysql_db: login_host="{{ mon_icinga_mysql_host }}" name={{ mon_icinga_mysql_web_database }} state=present
    tags: icdb

  - name: Create database for icingadirector
    become: True
    mysql_db: login_host="{{ mon_icinga_mysql_host }}" name={{ mon_icinga_mysql_director_database }} state=present encoding="utf8"
    register: ddbcreated
    tags: icdb

  - name: Import icinga schema
    become: True
    shell: mysql -h {{ mon_icinga_mysql_host }} {{ mon_icinga_mysql_database }} < /usr/share/icinga2-ido-mysql/schema/mysql.sql
    when: dbcreated.changed
    tags: icdb

  - name: Import icingaweb director schema
    become: True
    mysql_db: login_host="{{ mon_icinga_mysql_host }}" name={{ mon_icinga_mysql_director_database }} state=import encoding="utf8" target="/usr/share/icingaweb2/modules/director/schema/mysql.sql"
    when: ddbcreated.changed
    tags: icdb

  - name: Create database user for icinga
    become: True
    mysql_user: login_host="{{ mon_icinga_mysql_host }}" name={{ mon_icinga_mysql_user }} password="{{ mon_icinga_mysql_password }}" priv="{{ mon_icinga_mysql_database }}.*:ALL"
    tags: icdb

  - name: Create database user for icingaweb
    become: True
    mysql_user: login_host="{{ mon_icinga_mysql_host }}" name="{{ mon_icinga_mysql_web_user }}" password="{{ mon_icinga_mysql_web_password }}" priv="{{ mon_icinga_mysql_web_database }}.*:ALL"
    tags: icdb

  - name: Create database user for icingaweb-director
    become: True
    mysql_user: login_host="{{ mon_icinga_mysql_host }}" name="{{ mon_icinga_mysql_director_user }}" password="{{ mon_icinga_mysql_director_password }}" priv="{{ mon_icinga_mysql_director_database }}.*:ALL"
    tags: icdb

    # Per default, at least /etc/icingaweb2/modules has wrong ownership
  - name: Fix icingaweb directory ownership
    become: True
    file: path=/etc/icingaweb2 owner=www-data group=icingaweb2 recurse=yes
    tags: icconf

  - name: Create icinga nginx config file
    become: True
    template: src=nginx-dropin.conf.j2 dest=/etc/nginx/base.d/icinga.conf owner=root group=root mode=0644
    notify: restart nginx
    tags: icconf

  - name: Create icinga config files
    become: True
    template: src=icinga2/{{item }}.j2 dest=/etc/icinga2/conf.d/{{item }} owner=root group=root mode=0644
    notify: restart icinga
    with_items:
      - templates.conf
      - notifications.conf
      - users.conf
    tags: icconf

  - name: Create icinga scripts
    become: True
    template: src=icinga2/{{item }}.j2 dest=/etc/icinga2/scripts/{{item }} owner=root group=root mode=0755
    notify: restart icinga
    with_items:
      - mail-host-notification.sh
      - mail-service-notification.sh
    tags: icconf

  - name: Configure icinga features
    become: True
    template: src=icinga2/{{ item }}.j2 dest=/etc/icinga2/features-available/{{ item }} owner=root group=nagios mode=0640
    notify: restart icinga
    with_items:
      - graphite.conf
      - ido-mysql.conf
      - api.conf
    tags:
      - icconf
      - icfeatures

  - name: Load configuration facts
    set_fact:
      icinga_hosts_found: "{{ groups['mon-server'] }} + {{ groups['mon-client'] }}"

  - name: Create client host directories
    become: true
    file: path="/etc/icinga2/zones.d/{{ hostvars[item]['ansible_fqdn'] }}" state=directory owner=root group=nagios mode=0755
    with_items: "{{ groups['mon-client'] }}"
    when: "'ansible_fqdn' in hostvars[item]"
    failed_when: False # Do not fail when we can't upload a host. That simply means that we're not gonna update it

  - name: Create server/system host directories
    become: true
    file: path="/etc/icinga2/zones.d/{{ item }}" state=directory owner=root group=nagios mode=0755
    with_items:
      - master
      - global-templates

  - name: Upload client host details
    become: true
    copy: src="fetch/icc/{{ hostvars[item]['ansible_fqdn'] }}.conf" dest="/etc/icinga2/zones.d/{{ hostvars[item]['ansible_fqdn'] }}/{{ hostvars[item]['ansible_fqdn'] }}.conf" owner=root group=nagios mode=0644
    with_items: "{{ groups['mon-client'] }}"
    when: "'ansible_fqdn' in hostvars[item]"
    failed_when: False # Do not fail when we can't upload a host. That simply means that we're not gonna update it

  - name: Upload server host details
    become: true
    copy: src="fetch/icc/{{ hostvars[item]['ansible_fqdn'] }}.conf" dest="/etc/icinga2/zones.d/master/{{ hostvars[item]['ansible_fqdn'] }}.conf" owner=root group=nagios mode=0644
    with_items: "{{ groups['mon-server'] }}"

  - name: Create icinga global templates
    become: True
    template: src=icinga2/{{item }}.j2 dest=/etc/icinga2/zones.d/global-templates/{{item }} owner=root group=root mode=0644
    notify: restart icinga
    with_items:
      - services.conf
    tags: icconf

  - name: Remove old icinga config files from previous versions of this role
    become: True
    file: path=/etc/icinga2/conf.d/{{ item }} state=absent
    notify: restart icinga
    with_items:
      - services.conf
    tags: icconf

  - name: Ensure icinga dropin directories exists
    become: True
    file: path="{{ item }}" state=directory owner=root group=root mode=0755
    with_items:
      - /etc/systemd/system/icinga2.service.d
      - /etc/icinga2/ansb-zones.d
    tags:
      - icconf

  - name: Install icinga zone assembly support script
    become: True
    copy:
      src: "gen-zones.sh"
      dest: "/etc/icinga2/gen-zones.sh"
      owner: root
      group: root
      mode: 0755
    tags:
      - icconf

  - name: Install icinga systemd drop-in
    become: True
    copy:
      src: "icinga2-dropin.conf"
      dest: /etc/systemd/system/icinga2.service.d/ansible.conf
      owner: root
      group: root
      mode: 0644
    register: icdropin
    tags:
      - icconf

  - name: Reload systemd
    become: True
    when: icdropin.changed
    command: systemctl daemon-reload
    tags:
      - icconf

  - name: Create icinga main configs
    become: True
    template: src=icinga2/{{ item }}.j2 dest=/etc/icinga2/{{ item }} owner=root group=root mode=0644
    notify: restart icinga
    with_items:
      - icinga2.conf
      - constants.conf
    tags: icconf

  - name: Create icinga server zones
    become: True
    notify: restart icinga
    failed_when: False
    template:
      src: "icinga2/zones-server.conf.j2"
      dest: "/etc/icinga2/ansb-zones.d/sv-{{ item }}"
      owner: root
      group: root
      mode: 0644
    with_items: "{{ groups['mon-server'] }}"
    tags: icconf

  - name: Create icinga client zones
    become: True
    notify: restart icinga
    failed_when: False
    template:
      src: "icinga2/zones-client.conf.j2"
      dest: "/etc/icinga2/ansb-zones.d/cl-{{ item }}"
      owner: root
      group: root
      mode: 0644
    with_items: "{{ groups['mon-client'] }}"
    tags: icconf

  - name: Create icinga master zone
    become: True
    notify: restart icinga
    failed_when: False
    template:
      src: "icinga2/zones-master.conf.j2"
      dest: "/etc/icinga2/ansb-zones.d/master"
      owner: root
      group: root
      mode: 0644
    tags: icconf

  - name: Enable icinga modules
    become: True
    command: icinga2 feature enable {{ item }} creates=/etc/icinga2/features-enabled/{{ item }}.conf
    notify: restart icinga
    with_items:
      - command
      - graphite
      - ido-mysql
      - api
    tags:
      - icconf
      - icfeatures

  - name: Disable icinga modules
    become: True
    command: icinga2 feature disable {{ item }} removes=/etc/icinga2/features-enabled/{{ item }}.conf
    notify: restart icinga
    with_items:
      - influxdb
      - perfdata
    tags:
      - icconf
      - icfeatures

  - name: Set php fpm default timezone
    become: True
    lineinfile: dest=/etc/php/7.0/fpm/php.ini regexp='^date.timezone =' line='date.timezone = Europe/Zurich'
    notify: restart php-fpm

  - name: Ensure that the fpm/web user can access the icinga socket
    become: True
    user: name=www-data append=yes groups="icingaweb2"
    notify: restart php-fpm

  - name: Ensure that services are started and enabled
    become: True
    systemd: name={{ item }} state=started enabled=yes
    with_items:
      - tcpdup
      - prometheus-graphite-exporter
      - prometheus
