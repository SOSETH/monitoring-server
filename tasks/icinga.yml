---
  - name: Create database for icinga
    become: True
    mysql_db: login_host="{{ mon_icinga_mysql_host }}" name={{ mon_icinga_mysql_database }} state=present
    register: dbcreated
    tags: icdb

  - name: Import icinga schema
    become: True
    shell: mysql -h {{ mon_icinga_mysql_host }} {{ mon_icinga_mysql_database }} < /usr/share/icinga2-ido-mysql/schema/mysql.sql
    when: dbcreated.changed
    tags: icdb

  - name: Create database user for icinga
    become: True
    mysql_user: login_host="{{ mon_icinga_mysql_host }}" name={{ mon_icinga_mysql_user }} password="{{ mon_icinga_mysql_password }}" priv="{{ mon_icinga_mysql_database }}.*:ALL"
    tags: icdb

  - name: Create icinga config files
    become: True
    template: src=icinga2/{{item }}.j2 dest=/etc/icinga2/conf.d/{{item }} owner=root group=root mode=0644
    notify: restart icinga
    with_items:
      - templates.conf
      - notifications.conf
      - users.conf
    tags: icconf

  - name: Create icinga scripts
    become: True
    template: src=icinga2/{{item }}.j2 dest=/etc/icinga2/scripts/{{item }} owner=root group=root mode=0755
    notify: restart icinga
    with_items:
      - mail-host-notification.sh
      - mail-service-notification.sh
    tags: icconf

  - name: Configure icinga features
    become: True
    template: src=icinga2/{{ item }}.j2 dest=/etc/icinga2/features-available/{{ item }} owner=root group=nagios mode=0640
    notify: restart icinga
    with_items:
      - graphite.conf
      - ido-mysql.conf
      - api.conf
    tags:
      - icconf
      - icfeatures

  - name: Load configuration facts
    set_fact:
      icinga_hosts_found: "{{ groups['mon_server'] }} + {{ groups['mon_client'] }}"

  - name: Create client host directories
    become: true
    file: path="/etc/icinga2/zones.d/{{ hostvars[item]['ansible_fqdn'] }}" state=directory owner=root group=nagios mode=0755
    with_items: "{{ groups['mon_client'] }}"
    when: "'ansible_fqdn' in hostvars[item]"
    failed_when: False # Do not fail when we can't upload a host. That simply means that we're not gonna update it

  - name: Create server/system host directories
    become: true
    file: path="/etc/icinga2/zones.d/{{ item }}" state=directory owner=root group=nagios mode=0755
    with_items:
      - master
      - global-templates

  - name: Upload client host details
    become: true
    copy: src="fetch/icc/{{ hostvars[item]['ansible_fqdn'] }}.conf" dest="/etc/icinga2/zones.d/{{ hostvars[item]['ansible_fqdn'] }}/{{ hostvars[item]['ansible_fqdn'] }}.conf" owner=root group=nagios mode=0644
    with_items: "{{ groups['mon_client'] }}"
    when: "'ansible_fqdn' in hostvars[item]"
    failed_when: False # Do not fail when we can't upload a host. That simply means that we're not gonna update it

  - name: Upload server host details
    become: true
    copy: src="fetch/icc/{{ hostvars[item]['ansible_fqdn'] }}.conf" dest="/etc/icinga2/zones.d/master/{{ hostvars[item]['ansible_fqdn'] }}.conf" owner=root group=nagios mode=0644
    with_items: "{{ groups['mon_server'] }}"
    when: not ansible_check_mode

  - name: Create icinga global templates
    become: True
    template: src=icinga2/{{item }}.j2 dest=/etc/icinga2/zones.d/global-templates/{{item }} owner=root group=root mode=0644
    notify: restart icinga
    with_items:
      - services.conf
    tags: icconf

  - name: Remove old icinga config files from previous versions of this role
    become: True
    file: path=/etc/icinga2/conf.d/{{ item }} state=absent
    notify: restart icinga
    with_items:
      - services.conf
    tags: icconf

  - name: Ensure icinga dropin directories exists
    become: True
    file: path="{{ item }}" state=directory owner=root group=root mode=0755
    with_items:
      - /etc/systemd/system/icinga2.service.d
      - /etc/icinga2/ansb-zones.d
    tags:
      - icconf

  - name: Install icinga zone assembly support script
    become: True
    copy:
      src: "gen-zones.sh"
      dest: "/etc/icinga2/gen-zones.sh"
      owner: root
      group: root
      mode: 0755
    tags:
      - icconf

  - name: Install icinga systemd drop-in
    become: True
    copy:
      src: "icinga2-dropin.conf"
      dest: /etc/systemd/system/icinga2.service.d/ansible.conf
      owner: root
      group: root
      mode: 0644
    register: icdropin
    tags:
      - icconf

  - name: Reload systemd
    become: True
    when: icdropin.changed
    command: systemctl daemon-reload
    tags:
      - icconf

  - name: Create icinga main configs
    become: True
    template: src=icinga2/{{ item }}.j2 dest=/etc/icinga2/{{ item }} owner=root group=root mode=0644
    notify: restart icinga
    with_items:
      - icinga2.conf
      - constants.conf
    tags: icconf

  - name: Create icinga server zones
    become: True
    notify: restart icinga
    failed_when: False
    template:
      src: "icinga2/zones-server.conf.j2"
      dest: "/etc/icinga2/ansb-zones.d/sv-{{ item }}"
      owner: root
      group: root
      mode: 0644
    with_items: "{{ groups['mon_server'] }}"
    tags: icconf

  - name: Create icinga client zones
    become: True
    notify: restart icinga
    failed_when: False
    template:
      src: "icinga2/zones-client.conf.j2"
      dest: "/etc/icinga2/ansb-zones.d/cl-{{ item }}"
      owner: root
      group: root
      mode: 0644
    with_items: "{{ groups['mon_client'] }}"
    tags: icconf

  - name: Create icinga master zone
    become: True
    notify: restart icinga
    failed_when: False
    template:
      src: "icinga2/zones-master.conf.j2"
      dest: "/etc/icinga2/ansb-zones.d/master"
      owner: root
      group: root
      mode: 0644
    tags: icconf

  - name: Enable icinga modules
    become: True
    command: icinga2 feature enable {{ item }} creates=/etc/icinga2/features-enabled/{{ item }}.conf
    notify: restart icinga
    with_items:
      - command
      - graphite
      - ido-mysql
      - api
    tags:
      - icconf
      - icfeatures

  - name: Disable icinga modules
    become: True
    command: icinga2 feature disable {{ item }} removes=/etc/icinga2/features-enabled/{{ item }}.conf
    notify: restart icinga
    with_items:
      - influxdb
      - perfdata
    tags:
      - icconf
      - icfeatures
